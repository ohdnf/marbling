/**
 * ! 풀다가 도저히 안될 것 같아 인터넷을 참고했습니다 ㅠㅠㅠ!
 *
 * - 패턴 분석
 *  - 제시된 그림에서 2X3의 도형의 각 꼭지점을 정확히 지나는 것을 볼 수 있다
 *
 *  - 2X3은 8X12의 최대공약수 4로 나누어졌음을 알 수 있고 이를 "최소 단위의 도형"이라고 칭했을 때
 *  최소 단위의 도형에서 사용할 수 없는 사각형의 개수는 대각선과 사각형의 만나는 지점(중복 제외)의 개수라고 할 수 있다
 *  이는 "2 + 3 - 1(2, 3의 최대공약수)" 의 패턴을 갖는다
 *
 *  - 8X12 도형의 의 최대공약수 4로 나눈 최소단위의 2X3 도형은 총 4개의 사용 불가능한 사각형을 가지고 있고
 *  이를 8X12 도형의 최대공약수 만큼 곱해주면 16개의 사용 불가능한 사각형 개수를 구할 수 있다
 *
 *  - 즉, 사용불가능한 사각형의 개수는 "w + h - (w, h의 최대공약수)"이다
 *
 * - 최대공약수를 구하는 공식은 유클리드 호제법 이용
 *  - 2개의 자연수 a, b (a > b)에 대해서 a를 b로 나눈 나머지를 r이라고 하면
 *  a, b의 최대 공약 수는 b 와 r의 최대공약수와 같다
 */

function solution(w, h) {
  w = parseInt(w);
  h = parseInt(h);

  const getGCF = (a, b) => {
    if (a < b) {
      [a, b] = [b, a];
    }

    const r = a % b;

    return r > 0 ? getGCF(b, r) : b;
  };

  const GCF = getGCF(w, h);

  return w * h - (w + h - GCF);
}

console.log(solution(8, 12));
